SHELL = /bin/bash

ROOT_DIR = /raid1/discovery/sequencing_run_processing
SCRIPTS = ${ROOT_DIR}/scripts
TEMP_DIR = /raid1/projects/scratch

ILLUMINA_ADAPTERS = ${ROOT_DIR}/Illumina_adapters.fa
INDEXED_GENOME_FASTA = /raid1/references_and_indexes/hg38/hg38.fa

BWA = bwa
BWA_PRIMERS_PARAMS = mem -t 8 -D 0.01 -Y -k 4 -A 2 -B 1 -T 27 -a -v 2
BWA_TARGETS_PARAMS = mem -t 12 -B 2 -D 0.01 -v 2 -k 4 -T 0 -Y -A 2 -B 1 -T 27 -a 
BWA_PRIMER_INDEX_ROOT_DIR = ${ROOT_DIR}/bwa_indexes

PEAR = /usr/local/src/pear-0.9.6-bin-64/pear-0.9.6-bin-64 
PEAR_PARAMS = -v 1 -t 20 -n 35 -j 5 -p 1.0 -e

HISAT = /usr/local/src/hisat2-2.0.4/hisat2
HISAT_PARAMS = --no-mixed --no-discordant --no-contain
HISAT_INDEX = /raid1/references_and_indexes/hg38/HISAT2/hg38

# Must be specified within the including Makefile
#SUBDIR_NAME = $(notdir $(shell pwd))

STAR = /usr/local/src/STAR/bin/Linux_x86_64_static/STAR
STAR_INDEX = /raid1/STAR_pass1/genome_index

STAR_COMMON_PARAMS = --runThreadN 4 --genomeDir ${STAR_INDEX} --genomeLoad LoadAndRemove --readFilesCommand zcat 
STAR_ALIGN_PARAMS = --seedSearchStartLmax 12 --alignSJDBoverhangMin 1 --alignIntronMin 20 --alignIntronMax 1000000 --alignMatesGapMax 1000000 \
                    --alignSplicedMateMapLminOverLmate 0.08 --outFilterScoreMinOverLread 0.08 --outFilterMatchNminOverLread 0.08 --alignEndsType Local
STAR_OUTPUT_FILTER_PARAMS = --outFilterMultimapNmax 10000 --limitOutSJoneRead 10000 --outFilterIntronMotifs None --outSJfilterOverhangMin 12 6 6 6 \
                            --outFilterMismatchNoverLmax 0.08 --outFilterMismatchNmax 999

STAR_COMMON_PARAMS = --runThreadN 4 --genomeDir ${STAR_INDEX} --genomeLoad LoadAndKeep --readFilesCommand zcat
STAR_ALIGN_PARAMS = --alignEndsType EndToEnd --seedSearchStartLmax 12 --alignSJDBoverhangMin 1 --alignSJoverhangMin 1 \
            --alignIntronMin 20 --alignIntronMax 500000 --alignMatesGapMax 1000000 \
                    --alignSplicedMateMapLminOverLmate 0.008 --sjdbScore 10 --scoreStitchSJshift 10 --scoreGenomicLengthLog2scale 0
            --alignSJstitchMismatchNmax 0 -1 0 0

STAR_OUTPUT_FILTER_PARAMS = --outFilterMultimapNmax 10000 --limitOutSJoneRead 10000 --outFilterIntronMotifs None --outSJfilterOverhangMin 12 6 6 6 \
                            --outFilterMismatchNoverLmax 0.15 --outFilterScoreMinOverLread 0.008 --outFilterMatchNminOverLread 0.8 --outFilterMismatchNmax 999


STAR_OUTPUT_FORMAT_PARAMS = --outSAMtype BAM Unsorted --outSAMmode Full --outSAMattributes All --outSAMunmapped Within --outStd BAM_Unsorted

STAR_PARAMS = ${STAR_COMMON_PARAMS} ${STAR_ALIGN_PARAMS} ${STAR_OUTPUT_FILTER_PARAMS} ${STAR_OUTPUT_FORMAT_PARAMS}


SEQUENCING_RUNS_ROOT_DIR = /raid1/raw_data/SequencingRuns


.SECONDARY:
.PHONY: reset_dir populate_library_dirs setup_library_dirs finalize_dirs summary_excel ercc_comparisons clean
.PRECIOUS: aligned_incomplete_R1.fq.gz aligned_incomplete_R2.fq.gz aligned_complete_R1.fq.gz aligned_complete_R2.fq.gz

default:
    @echo "No default actions"


summary_excel:
    ${MAKE} ${SUBDIR_NAME}_summary.xls


ercc_comparisons:
    ${MAKE} ${SUBDIR_NAME}_ERCC_comparisons.xls


populate_library_dirs: library_details.tsv
    ${SEQUENCING_RUNS_ROOT_DIR}/scripts/populateLibraryDirs.py ${SEQUENCING_RUNS_ROOT_DIR} ${SEQUENCING_RUN} \
    <(tail -n +2 $< | cut -f 1 | tr -d \\#)


setup_library_dirs: library_details.tsv
    tail -n +2 $< | egrep -v "^#" | while IFS=$$'\t' read lib_name ercc_mix umi_len primers_files targets_bed; do \
        primer_products_files=`echo $${primers_files} | sed 's/primers/primers_expected_products/g'` ; \
        echo "### $${lib_name} ###" ; \
        cd ${ROOT_DIR}/${SEQUENCING_RUN}/$${lib_name}; \
        r1=`ls *_R1*.fastq.gz` ; \
        r2=`ls *_R2*.fastq.gz` ; \
        echo "SHELL = /bin/bash" > Makefile ; \
        echo "R1_FASTQ = $${r1}" >> Makefile ; \
        echo "R2_FASTQ = $${r2}" >> Makefile ; \
        echo "UMI_LEN = $${umi_len}" >> Makefile ; \
        echo "ERCC_MIX = $${ercc_mix}" >> Makefile ; \
        if [[ $${targets_bed} != "None" ]]; then \
            echo "TARGETS_BED = $${targets_bed}" >> Makefile ; \
        fi ; \
        echo "include ${ROOT_DIR}/Makefile.common" >> Makefile; \
        mkdir bwa_indexes ; \
        echo "Primers files: $${primers_files}" ; \
        cat $${primers_files} > bwa_indexes/primers.fa ; \
        cat ${ILLUMINA_ADAPTERS} >> bwa_indexes/primers.fa ; \
        echo "Primer products files: $${primer_products_files}" ; \
        cat $${primer_products_files} > bwa_indexes/products.fa ; \
        bwa index bwa_indexes/primers.fa ; \
        bwa index bwa_indexes/products.fa ; \
        cd ${ROOT_DIR}/${SEQUENCING_RUN}; \
    done


finalize_dirs:  library_details.tsv
    tail -n +2 $< | egrep -v "^#" | while IFS=$$'\t' read lib_name ercc_mix umi_len primers_files targets_bed; do \
        echo "### $${lib_name} ###" ; \
        cd ${ROOT_DIR}/${SUBDIR_NAME}/$${lib_name}; \
        ${MAKE} target_RNA_quantities.tsv ; \
        rm aligned_incomplete_R1.fq.gz aligned_incomplete_R2.fq.gz aligned_complete_R1.fq.gz aligned_complete_R2.fq.gz ; \
        cd ${ROOT_DIR}; \
    done


reset_dir:
    -rm standardize* aligned_incomplete_merged_to_target_PEAR.fa.gz
    -rm aligned_* *merged* *.bam *err
    -rm -rf PEAR_aligned_* STAR_realignments_for_*_merged
    -rm bwa_debug.sam
    -rm target_RNA_quantities.tsv


all_merged_sorted_triage.txt: all_merged_sorted.txt
    ${SCRIPTS}/triageRunData.py $< $@


reads_to_expected_products_BWA.bam: bwa_indexes/products.fa R1.fq R2.fq
    ${BWA} ${BWA_TARGETS_PARAMS} $^ | samtools view -x SA -b -o $@ -


standardized_read_to_target_matches.tsv.gz: bwa_indexes/primers.fa ${R1_FASTQ} ${R2_FASTQ}
    -rm merged_fastq.pipe
    mkfifo merged_fastq.pipe

    paste \
    <(zcat ${R1_FASTQ} | awk '0==(NR+3)%4{ORS=" "; split($$0,a," "); print a[1]}0==(NR+2)%4{print}0==NR%4{ORS="\n";print}') \
    <(zcat ${R2_FASTQ} | awk '0==(NR+3)%4{ORS=" "; split($$0,a," "); print a[1]}0==(NR+2)%4{print}0==NR%4{ORS="\n";print}') | \
    awk '{printf "%s_1\n%s\n+\n%s\n%s_2\n%s\n+\n%s\n",$$1,$$2,$$3,$$4,$$5,$$6}' > merged_fastq.pipe &

    # These two lines are temporary for debugging:
    #${BWA} ${BWA_PRIMERS_PARAMS} bwa_indexes/primers.fa merged_fastq.pipe > bwa_debug.sam
    #${SCRIPTS}/standardizeReadsUsingPrimerMatchesUsingBWA.py ${UMI_LEN} $< bwa_debug.sam $@ standardize_reads.log # standardize_reads.aux.gz 

    ${SCRIPTS}/standardizeReadsUsingPrimerMatchesUsingBWA.py ${UMI_LEN} $<  \
    <(${BWA} ${BWA_PRIMERS_PARAMS} $< merged_fastq.pipe) $@ standardize_reads.log # standardize_reads.aux.gz 

    rm merged_fastq.pipe


standardized_read_to_target_matches_BWA.bam: standardized_read_to_target_matches.tsv.gz
    zcat $< | awk '{printf "@%s,%s\n%s\n+\n%s\n",$$1,$$2,$$3,$$4}' > R1.fq
    zcat $< | bioawk '{printf "@%s,%s\n%s\n+\n%s\n",$$1,$$2,revcomp($$5),reverse($$6)}' > R2.fq
    ${BWA} ${BWA_TARGETS_PARAMS} bwa_indexes/products.fa R1.fq R2.fq | samtools view -x SA -F 0x0800 -b -o $@ -
    rm R1.fq R2.fq

aligned_incomplete_R1.fq.gz aligned_incomplete_R2.fq.gz aligned_complete_R1.fq.gz aligned_complete_R2.fq.gz: standardized_read_to_target_matches_BWA.bam
    ${SCRIPTS}/extractNoncontiguousPairsToFastq.py $< aligned_incomplete_R1.fq.gz aligned_incomplete_R2.fq.gz aligned_complete_R1.fq.gz aligned_complete_R2.fq.gz


PEAR_aligned_%/pear.assembled.fastq.gz: aligned_%_R1.fq.gz aligned_%_R2.fq.gz
    -mkdir PEAR_aligned_$*
    ${PEAR} ${PEAR_PARAMS} -f aligned_$*_R1.fq.gz -r aligned_$*_R2.fq.gz -o PEAR_aligned_$*/pear
    gzip PEAR_aligned_$*/pear.assembled.fastq


aligned_%_merged_to_genome_HISAT.bam: PEAR_aligned_%/pear.assembled.fastq.gz
    ${HISAT} -p 10 -q --sp 2,1 --phred33 --score-min L,0,-0.4 -x ${HISAT_INDEX} \
    -U $< | samtools view -hu -F 4 - | intersectBed -a stdin -b ${TARGETS_BED} -u -f 1.0 -r -split | \
    samtools view - | awk '($$6 !~ /D|I/)' | cut -f 1 > for_excluding_$*_HISAT.ids # These should be perfect alignments to target sequence
    zcat $< | awk '((NR-1)%4 == 0)' | cut -b 2- >> for_excluding_$*_HISAT.ids # Add all IDs
    sort for_excluding_$*_HISAT.ids | uniq -u > to_extract_$*_HISAT.ids # These should be all imperfect and non-aligning to target sequence
    seqtk subseq $< to_extract_$*_HISAT.ids | ${HISAT} -p 10 -q -U - --sp 2,1 --phred33 --score-min L,0,-0.4 -x ${HISAT_INDEX} | \
    samtools view -hbo  $@ -F 4 - 
    rm for_excluding_$*_HISAT.ids to_extract_$*_HISAT.ids


aligned_%_merged_to_genome_STAR.bam: PEAR_aligned_%/pear.assembled.fastq.gz
    -mkdir STAR_realignments_for_$*_merged
ifdef TARGETS_BED
    ${STAR} --outFileNamePrefix STAR_realignments_for_$*_merged/ --readFilesIn $< ${STAR_PARAMS} | \
    samtools view -hu -F 4 - | intersectBed -a stdin -b ${TARGETS_BED} -u -f 1.0 -r -split | samtools view - | \
    awk '($$6 !~ /D|I/)' | cut -f 1 > for_excluding_$*_STAR.ids
    zcat $< | awk '((NR-1)%4 == 0)' | cut -b 2- >> for_excluding_$*_STAR.ids
    sort for_excluding_$*_STAR.ids | uniq -u > to_extract_$*_STAR.ids
    seqtk subseq $< to_extract_$*_STAR.ids | gzip -c > to_extract_$*_STAR.fq.gz
    ${STAR} --outFileNamePrefix STAR_realignments_for_$*_merged/ --readFilesIn to_extract_$*_STAR.fq.gz ${STAR_PARAMS} | samtools view -hbo $@ -F 4 -
    rm for_excluding_$*_STAR.ids to_extract_$*_STAR.ids to_extract_$*_STAR.fq.gz
else
    ${STAR} --outFileNamePrefix STAR_realignments_for_$*_merged/ --readFilesIn $< ${STAR_PARAMS} | samtools view -hbo $@ -F 4 -
endif
    rm -rf STAR_realignments_for_$*_merged


aligned_incomplete_merged_to_target_FLASH.bam: aligned_incomplete_R1.fq.gz aligned_incomplete_R2.fq.gz
    -mkdir FLASH_aligned_incomplete
    /usr/local/src/FLASH-1.2.11/flash $^ -t 10 -m 1 -M 200 -d FLASH_aligned_incomplete
    usearch -usearch_global FLASH_aligned_incomplete/out.extendedFrags.fastq -db bwa_indexes/products.fa -strand plus -id 0.2 -samout usearch_mapped_incomplete_mergers_FLASH.sam
    # TODO: investigate the usearch merges with flag 4 that are filtered out in by awk here:
    awk '($$2 == 0)' usearch_mapped_incomplete_mergers_FLASH.sam | samtools view -hb -t bwa_indexes/products.fa.fai -o $@ -  
    rm -rf FLASH_aligned_incomplete mapped_incomplete_mergers_FLASH.fq usearch_mapped_incomplete_mergers_FLASH.sam


aligned_incomplete_merged_to_target_PEAR.bam: aligned_incomplete_R1.fq.gz aligned_incomplete_R2.fq.gz
    -mkdir PEAR_aligned_incomplete
    ${PEAR} ${PEAR_PARAMS} -f aligned_incomplete_R1.fq.gz -r aligned_incomplete_R2.fq.gz -o PEAR_aligned_incomplete/pear
    usearch -usearch_global PEAR_aligned_incomplete/pear.assembled.fastq -db bwa_indexes/products.fa -strand plus -id 0.2 -samout usearch_mapped_incomplete_mergers_PEAR.sam
    awk '($$2 == 0)' usearch_mapped_incomplete_mergers_PEAR.sam | samtools view -hb -t bwa_indexes/products.fa.fai -o $@ -  
    #rm -rf PEAR_aligned_incomplete usearch_mapped_incomplete_mergers_PEAR.sam PEAR_assembled_combined.fq # mapped_incomplete_mergers_PEAR.fq 


aligned_incomplete_merged_to_target_PEAR.fa.gz: PEAR_aligned_incomplete/pear.assembled.fastq.gz
    -mkdir PEAR_aligned_incomplete_for_USEARCH
    cp $< PEAR_aligned_incomplete_for_USEARCH
    gunzip PEAR_aligned_incomplete_for_USEARCH/pear.assembled.fastq.gz
    usearch -usearch_global PEAR_aligned_incomplete_for_USEARCH/pear.assembled.fastq -db bwa_indexes/products.fa \
    -strand plus -id 0.2 -fastapairs aligned_incomplete_merged_to_target_PEAR.fa
    gzip aligned_incomplete_merged_to_target_PEAR.fa
    -rm -rf PEAR_aligned_incomplete_for_USEARCH


aligned_incomplete_STAR.bam: aligned_incomplete_R1.fq.gz aligned_incomplete_R2.fq.gz
    -mkdir STAR_realignments_for_incomplete
    ${STAR} --outFileNamePrefix STAR_realignments_for_incomplete/ --readFilesIn $^ ${STAR_PARAMS} | \
    samtools view -hb -f 2 -o $@ - 
    rm -rf STAR_realignments_for_incomplete

aligned_incomplete_HISAT.bam: aligned_incomplete_R1.fq.gz aligned_incomplete_R2.fq.gz
    ${HISAT} -q --sp 2,1 --score-min L,0,-0.4 --phred33 -x ${HISAT_INDEX} \
    -1 aligned_incomplete_R1.fq.gz -2 aligned_incomplete_R2.fq.gz | samtools view -hb -f 2 -o $@ -


aligned_complete_STAR.bam: aligned_complete_R1.fq.gz aligned_complete_R2.fq.gz
    -mkdir STAR_realignments_for_complete
ifdef TARGETS_BED
    ${STAR} --outFileNamePrefix STAR_realignments_for_complete/ --readFilesIn $^ ${STAR_PARAMS} | \
    samtools view -hu -f 2 - | pairToBed -f 1.0 -type notboth -abam stdin -b ${TARGETS_BED} > $@
else
    ${STAR} --outFileNamePrefix STAR_realignments_for_complete/ --readFilesIn $^ ${STAR_PARAMS} | \
    samtools view -hu -f 2 -o $@ - 
endif
    rm -rf STAR_realignments_for_complete


aligned_complete_HISAT.bam: aligned_complete_R1.fq.gz aligned_complete_R2.fq.gz 
    -mkdir HISAT_realignments_for_complete
ifdef TARGETS_BED
    ${HISAT} -q --sp 2,1 --score-min L,0,-0.4 --phred33 -x ${HISAT_INDEX} \
    -1 aligned_complete_R1.fq.gz -2 aligned_complete_R2.fq.gz | samtools view -hu -f 2 - | \
    pairToBed -f 1.0 -type notboth -abam stdin -b ${TARGETS_BED} > $@
else
    ${HISAT} -q --sp 2,1 --score-min L,0,-0.4 --phred33 -x ${HISAT_INDEX} \
    -1 aligned_complete_R1.fq.gz -2 aligned_complete_R2.fq.gz | samtools view -hu -f 2 -o $@ - 
endif
    rm -rf HISAT_realignments_for_complete


merged_mates.tsv.gz unmerged_mates.tsv: standardized_read_to_target_matches_BWA.bam \
                    aligned_incomplete_HISAT.bam aligned_incomplete_STAR.bam \
                    aligned_complete_HISAT.bam aligned_complete_STAR.bam \
                    aligned_complete_merged_to_genome_HISAT.bam aligned_complete_merged_to_genome_STAR.bam \
                    aligned_incomplete_merged_to_genome_HISAT.bam aligned_incomplete_merged_to_genome_STAR.bam \
                    aligned_incomplete_merged_to_target_PEAR.fa.gz
    ${SCRIPTS}/mergeAndClusterStandardizedReads.py ${INDEXED_GENOME_FASTA} $^ bwa_indexes/primers.fa bwa_indexes/products.fa \
    mates_merge.log merged_mates.tsv.gz unmerged_mates.tsv


all_libraries_amplicon_counts.tsv: library_details.tsv
    ${SCRIPTS}/compileAllLibrariesAmpliconCounts.py $< $@


all_libraries_canonical_amplicon_counts.tsv: all_libraries_amplicon_counts.tsv
    cut -f 1,2 /raid1/projects/RT-qSeq/PNAS_isoforms/PNAS_isoforms_primers.tsv | head -1 > table1.tsv
    cut -f 1,2 /raid1/projects/RT-qSeq/PNAS_isoforms/PNAS_isoforms_primers.tsv | tail -n +2 | sort -k1,1 >> table1.tsv
    head -1 $< | cut -f 1,3- > table2.tsv
    tail -n +2 $< | awk '($$2 ~ /^[[:digit:]]+M$$/)' | cut -f 1,3- | sort -k1,1 >> table2.tsv
    join --header table1.tsv table2.tsv > $@
    rm table[12].tsv


filtered_standardized_read_to_target_matches.tsv: standardized_read_to_target_matches.tsv
    ${SCRIPTS}/filterStandardizedReads.py $< ${PRIMERS_TARGET_TSV} filtered_standardize_reads.log $@


target_RNA_quantities.tsv: ${ROOT_DIR}/Pilot_targets.ercc-data filtered_standardized_read_to_target_matches.tsv
    ${SCRIPTS}/evalSequencingResults.py ${ERCC_MIX} $^ $@

target_RNA_quantities.tsv: ${ROOT_DIR}/Pilot_targets.ercc-data merged_mates.tsv.gz
ifdef TARGETS_BED
    ${SCRIPTS}/evalSequencingResults2.py ${ERCC_MIX} ${TARGETS_BED} $^ $@
else
    ${SCRIPTS}/evalSequencingResults2.py ${ERCC_MIX} NA $^ $@
endif


%_summary.xls: library_details.tsv ${ROOT_DIR}/Pilot_targets.ercc-data
    ${SCRIPTS}/summarizeLibraryResultsInExcel.py $^ $@


# library_ERCC_comparisons.tsv is a manually-created two-column file of libraries that are the same
# except for using the two different ERCC mixes.
%_ERCC_comparisons.xls: library_ERCC_comparisons.tsv ${ROOT_DIR}/Pilot_targets.ercc-data
    ${SCRIPTS}/pairwiseCompareLibrariesByERCC.py $^ $@


clean:
    -rm standardized_read_to_target_matches.tsv
    -rm standardized_read_to_target_matches_BWA.bam
    -rm standardized_pairs_to_fastq.log
    -rm aligned_incomplete_STAR.bam
    -rm aligned_complete_STAR.bam
    -rm target_RNA_quantities.tsv
    -rm -rf bwa_indexes
    -rm aligned_incomplete_R?.fq.gz
    -rm aligned_complete_R?.fq.gz
    -rm standardized_pairs_to_fastq.log
    -rm standardize_reads.log
    -rm merged_mates.log
    -rm merged_mates.tsv.gz
    -rm merged_mates.tsv.gz-err
